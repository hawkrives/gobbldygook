// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreditSummary handles having exactly the right number of credits 1`] = `
<p
  className="paragraph"
>
  You have currently planned for 
  10
   
  of your 
  10
   required credits.
   Good job!
</p>
`;

exports[`CreditSummary handles having fewer credits than needed 1`] = `
<p
  className="paragraph"
>
  You have currently planned for 
  5
   
  of your 
  10
   required credits.
</p>
`;

exports[`CreditSummary handles having more credits than needed 1`] = `
<p
  className="paragraph"
>
  You have currently planned for 
  15
   
  of your 
  10
   required credits.
   Good job!
</p>
`;

exports[`CreditSummary renders shallowly 1`] = `
<p
  className="paragraph"
>
  You have currently planned for 
  5
   
  of your 
  10
   required credits.
</p>
`;

exports[`DateSummary allows editing the graduation year if onChangeGraduation is given 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2012"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={false}
    multiLine={false}
    onBlur={[Function]}
    onChange={[Function]}
    value="2016"
  />
  .
</p>
`;

exports[`DateSummary allows editing the matriculation year if onChangeMatriculation is given 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={false}
    multiLine={false}
    onBlur={[Function]}
    onChange={[Function]}
    value="2012"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2016"
  />
  .
</p>
`;

exports[`DateSummary calls onChangeGraduation when the graduation year is changed 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2012"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={false}
    multiLine={false}
    onBlur={[Function]}
    onChange={[Function]}
    value="2016"
  />
  .
</p>
`;

exports[`DateSummary calls onChangeMatriculation when the matriculation year is changed 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={false}
    multiLine={false}
    onBlur={[Function]}
    onChange={[Function]}
    value="2012"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2016"
  />
  .
</p>
`;

exports[`DateSummary disables editing the graduation year if onChangeGraduation is not given 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2012"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2016"
  />
  .
</p>
`;

exports[`DateSummary disables editing the matriculation year if onChangeMatriculation is not given 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2012"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2016"
  />
  .
</p>
`;

exports[`DateSummary handles graduating before matriculation 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2016"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2012"
  />
  .
</p>
`;

exports[`DateSummary handles graduating in five years 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2000"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2005"
  />
  .
</p>
`;

exports[`DateSummary handles graduating in four years 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2000"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2004"
  />
  .
</p>
`;

exports[`DateSummary handles graduating in six years 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2000"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2006"
  />
  .
</p>
`;

exports[`DateSummary handles graduating in three years 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2000"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2003"
  />
  .
</p>
`;

exports[`DateSummary renders 1`] = `
<p
  className="paragraph"
>
  After matriculating in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2012"
  />
  , you are planning to graduate in 
  <ContentEditable
    className="autosize-input"
    disabled={true}
    multiLine={false}
    onChange={[Function]}
    value="2016"
  />
  .
</p>
`;

exports[`DegreeSummary handles no studies 1`] = `"You are planning on no degrees0. "`;

exports[`DegreeSummary renders 1`] = `
<p
  className="paragraph"
>
  You are planning on
   
  no degrees
  0
  . 
</p>
`;

exports[`Footer handles the "can graduate" status 1`] = `
<div
  className="paragraph graduation-message"
>
  It looks like you'll make it! Just follow the plan, and go over my output with your advisor a few times.
</div>
`;

exports[`Footer handles the "cannot graduate" status 1`] = `
<div
  className="paragraph graduation-message"
>
  You haven't planned everything out yet. Ask your advisor if you need help fitting everything in.
</div>
`;

exports[`Footer renders 1`] = `
<div
  className="paragraph graduation-message"
>
  It looks like you'll make it! Just follow the plan, and go over my output with your advisor a few times.
</div>
`;

exports[`Header allows editing the name if onChangeName is given 1`] = `
<header
  className="student-summary--header"
>
  <AvatarLetter
    className="student-letter cannot-graduate"
    value="Natasha"
  />
  <div
    className="intro"
  >
    Welcome, 
    <ContentEditable
      className="autosize-input"
      disabled={false}
      multiLine={false}
      onBlur={[Function]}
      onChange={[Function]}
      value="Natasha"
    />
    !
  </div>
</header>
`;

exports[`Header calls onChangeName when the name is changed 1`] = `
<header
  className="student-summary--header"
>
  <AvatarLetter
    className="student-letter cannot-graduate"
    value="Natasha"
  />
  <div
    className="intro"
  >
    Welcome, 
    <ContentEditable
      className="autosize-input"
      disabled={false}
      multiLine={false}
      onBlur={[Function]}
      onChange={[Function]}
      value="Natasha"
    />
    !
  </div>
</header>
`;

exports[`Header disables editing the name if onChangeName is not given 1`] = `
<header
  className="student-summary--header"
>
  <AvatarLetter
    className="student-letter cannot-graduate"
    value="Natasha"
  />
  <div
    className="intro"
  >
    Welcome, 
    <ContentEditable
      className="autosize-input"
      disabled={true}
      multiLine={false}
      onChange={[Function]}
      value="Natasha"
    />
    !
  </div>
</header>
`;

exports[`Header renders 1`] = `
<header
  className="student-summary--header"
>
  <AvatarLetter
    className="student-letter can-graduate"
    value="Susan"
  />
  <div
    className="intro"
  >
    Welcome, 
    <ContentEditable
      className="autosize-input"
      disabled={true}
      multiLine={false}
      onChange={[Function]}
      value="Susan"
    />
    !
  </div>
</header>
`;

exports[`Header with an avatar handles the "can graduate" status 1`] = `
<header
  className="student-summary--header"
>
  <AvatarLetter
    className="student-letter can-graduate"
    value="Susan"
  />
  <div
    className="intro"
  >
    Welcome, 
    <ContentEditable
      className="autosize-input"
      disabled={true}
      multiLine={false}
      onChange={[Function]}
      value="Susan"
    />
    !
  </div>
</header>
`;

exports[`Header with an avatar handles the "cannot graduate" status 1`] = `
<header
  className="student-summary--header"
>
  <AvatarLetter
    className="student-letter cannot-graduate"
    value="Susan"
  />
  <div
    className="intro"
  >
    Welcome, 
    <ContentEditable
      className="autosize-input"
      disabled={true}
      multiLine={false}
      onChange={[Function]}
      value="Susan"
    />
    !
  </div>
</header>
`;

exports[`Header without an avatar handles the "can graduate" status 1`] = `
<header
  className="student-summary--header"
>
  <div
    className="intro"
  >
    Welcome, 
    <ContentEditable
      className="autosize-input"
      disabled={true}
      multiLine={false}
      onChange={[Function]}
      value="Susan"
    />
    !
  </div>
</header>
`;

exports[`Header without an avatar handles the "cannot graduate" status 1`] = `
<header
  className="student-summary--header"
>
  <div
    className="intro"
  >
    Welcome, 
    <ContentEditable
      className="autosize-input"
      disabled={true}
      multiLine={false}
      onChange={[Function]}
      value="Susan"
    />
    !
  </div>
</header>
`;
